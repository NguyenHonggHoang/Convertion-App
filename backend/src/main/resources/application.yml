server:
  forward-headers-strategy: framework
  tomcat:
    remote-ip-header: x-forwarded-for
    remote-ip-protocol-header: x-forwarded-proto
    remote-ip-internal-proxies: 10\\..*|192\\.168\\..*|172\\.(1[6-9]|2\\d|3[0-1])\\..*|127\\.0\\.0\\.1
  port: 8080

spring:
  application:
    name: converter
  datasource:
    url: ${SPRING_DATASOURCE_URL:${DATABASE_URL:jdbc:postgresql://localhost:5433/converter_db}}
    username: ${SPRING_DATASOURCE_USERNAME:${DATABASE_USER:postgres}}
    password: ${SPRING_DATASOURCE_PASSWORD:${DATABASE_PASSWORD:password}}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  flyway:
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
    enabled: true

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
      database: ${SPRING_DATA_REDIS_DATABASE:0}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  mail:
    host: ${SPRING_MAIL_HOST:smtp.gmail.com}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME:}
    password: ${SPRING_MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: ${SPRING_MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${SPRING_MAIL_STARTTLS_ENABLE:true}

  # Cache
  cache:
    type: caffeine
    caffeine:
      spec: ${SPRING_CACHE_CAFFEINE_SPEC:maximumSize=1000,expireAfterWrite=10m}

# Security configuration
security:
  jwks:
    url: ${JWKS_URL:http://backend:8080/.well-known/jwks.json}
  apiKey:
    header: ${SECURITY_INTERNAL_APIKEY_HEADER:X-API-Key}
  internal:
    auth:
      enabled: ${SECURITY_INTERNAL_AUTH_ENABLED:true}
    bootstrap:
      enabled: ${SECURITY_INTERNAL_BOOTSTRAP_ENABLED:true}

app:
  jwt:
    active-kid: ${JWT_ACTIVE_KID:dev-1}
    keys: ${JWT_PRIVATE_KEYS:}
    issuer: ${JWT_ISS:auth-service}
    audience: ${JWT_AUD:converter-backend}
    access-ttl-sec: ${JWT_ACCESS_TTL:900}
    jwks-uri: ${JWT_JWKS_URI:http://backend:8080/.well-known/jwks.json}
    jwks-refresh-seconds: ${JWT_JWKS_REFRESH:300}
    leeway-seconds: ${JWT_LEEWAY_SECONDS:30}
    issuers: ${JWT_ISSUERS:auth-service,converter-backend}
    audiences: ${JWT_AUDIENCES:converter-backend,converter-api}
  cookie:
    secure: ${APP_COOKIE_SECURE:false}
    sameSite: ${APP_COOKIE_SAMESITE:Lax}
  security:
    login:
      rate:
        softAttempts: 5
        softWindowSec: 600
        hardAttempts: 10
        hardWindowSec: 600
        lockoutSec: 900
        ipLimitPerMin: 60
  captcha:
    dev-bypass: ${APP_CAPTCHA_DEV_BYPASS:false}
    min-score: ${APP_CAPTCHA_MIN_SCORE:0.5}

# Captcha provider configuration
captcha:
  provider: ${CAPTCHA_PROVIDER:recaptcha}
  secret: ${CAPTCHA_SECRET:${RECAPTCHA_V2_SECRET:6Ldwfc4rAAAAAPZ1N6-0leFd0Phh3vzJs3wCQck_}}

# Microservices
microservice:
  predict:
    url: ${MICROSERVICE_PREDICT_URL:http://localhost:5001/predict}
  sentiment:
    url: ${MICROSERVICE_SENTIMENT_URL:http://localhost:5002/sentiment}
  crawl:
    url: ${MICROSERVICE_CRAWL_URL:http://localhost:5003/crawl}
  nlp:
    url: ${MICROSERVICE_NLP_URL:http://localhost:5004}
  advanced-nlp:
    url: ${MICROSERVICE_ADVANCED_NLP_URL:http://localhost:5004}

# External APIs
external:
  currency:
    api:
      url: ${EXTERNAL_CURRENCY_API_URL:https://v6.exchangerate-api.com/v6/}
      key: ${EXTERNAL_CURRENCY_API_KEY:352e86ed377365a97f759e4a}

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operationsSorter: method

# Logging
logging:
  level:
    com.example.converter: ${LOG_LEVEL_APP:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:INFO}
    org.springframework.web: ${LOG_LEVEL_WEB:INFO}
    org.springframework.cache: ${LOG_LEVEL_CACHE:INFO}
    org.springframework.data.redis: ${LOG_LEVEL_REDIS:INFO}

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_EXPOSE:health,info,metrics}
  endpoint:
    health:
      show-details: always
  health:
    mail:
      enabled: false

